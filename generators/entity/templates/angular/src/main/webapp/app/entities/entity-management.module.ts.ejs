import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { RouterModule } from '@angular/router';

import { <%= angularXAppName %>SharedModule } from 'app/shared';
<%_ Object.keys(differentRelationships).forEach(key => {
       if (key === 'User') { _%>
import { <%= angularXAppName %>AdminModule } from 'app/admin/admin.module';
<%_ }}); _%>
import {
    <%= entityAngularName %>Service,
    <%= entityAngularName %>Component,
    <%= entityAngularName %>DetailComponent,
    <%= entityAngularName %>UpdateComponent,
    <%= entityAngularName %>DeleteDialogComponent,
    <%= entityInstance %>Route,
    <%= entityInstance %>PopupRoute,
    <%= entityAngularName %>Resolve,
    <%_ if (pagination === 'pagination' || pagination === 'pager') { _%>
    <%= entityAngularName %>ResolvePagingParams
    <%_ } _%>
} from './';

import { <%= entityAngularName %>SelectDialogComponent } from './<%= entityFileName %>-select-dialog.component';
import { <%= entityAngularName %>DeleteDialogService } from './<%= entityFileName %>-delete-dialog.service';
import { <%= entityAngularName %>SelectDialogService } from './<%= entityFileName %>-select-dialog.service';
import { <%= entityAngularName %>FilterComponent } from './<%= entityFileName %>-filter.component';
<%_ for (idx in relationships) { _%>
import { <%= angularXAppName %><%=relationships[idx].otherEntityAngularName%>Module } from 'app/entities/<%=relationships[idx].otherEntityClientRootFolder%>/<%=relationships[idx].otherEntityFileName%>/<%=relationships[idx].otherEntityFileName%>.module';
<%_ } _%>

const ENTITY_STATES = [
    ...<%= entityInstance %>Route,
    ...<%= entityInstance %>PopupRoute,
];

@NgModule({
    imports: [
        <%= angularXAppName %>SharedModule,
        <%_ Object.keys(differentRelationships).forEach(key => {
              if (key === 'User') { _%>
        <%= angularXAppName %>AdminModule,
        <%_ }}); _%>
        RouterModule.forChild(ENTITY_STATES),
        <%_ for (idx in relationships) { _%>
        <%= angularXAppName %><%=relationships[idx].otherEntityAngularName%>Module
        <%_ } _%>
    ],
    declarations: [
        <%= entityAngularName %>Component,
        <%= entityAngularName %>DetailComponent,
        <%= entityAngularName %>UpdateComponent,
        <%= entityAngularName %>DeleteDialogComponent,
        <%= entityAngularName %>SelectDialogComponent,
        <%= entityAngularName %>FilterComponent
    ],
    entryComponents: [
        <%= entityAngularName %>Component,
        <%= entityAngularName %>UpdateComponent,
        <%= entityAngularName %>DeleteDialogComponent,
        <%= entityAngularName %>SelectDialogComponent
    ],
    providers: [
        <%= entityAngularName %>Service,
        <%= entityAngularName %>Resolve,
        <%= entityAngularName %>DeleteDialogService,
        <%= entityAngularName %>SelectDialogService,
        <%_ if (pagination === 'pagination' || pagination === 'pager') { _%>
        <%= entityAngularName %>ResolvePagingParams
        <%_ } _%>
    ],
    exports: [
        <%= entityAngularName %>DeleteDialogComponent,
        <%= entityAngularName %>SelectDialogComponent,
        <%= entityAngularName %>FilterComponent
    ],
    schemas: [CUSTOM_ELEMENTS_SCHEMA]
})
export class <%= angularXAppName %><%= entityAngularName %>Module {}
