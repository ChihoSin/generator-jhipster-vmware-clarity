    <%= entityInstancePlural %>: I<%= entityAngularName %>[];
    currentAccount: any;
    eventSubscriber: Subscription;
    routeData: any;
    // added for Clarity
    loading: any;
    selected: Array<I<%= entityAngularName %>>;

    constructor(
        private <%= entityInstance %>Service: <%= entityAngularName %>Service,
        private jhiAlertService: JhiAlertService,
        <%_ if (fieldsContainBlob) { _%>
        private dataUtils: JhiDataUtils,
        <%_ } _%>
        private eventManager: JhiEventManager,
        private principal: Principal,
        private router: Router
    ) {
        // added for Clarity
        this.loading = true;
        this.selected = [];
    }

    loadAll() {
        this.<%= entityInstance %>Service.query().subscribe(
            (res: HttpResponse<I<%= entityAngularName %>[]>) => {
                this.<%= entityInstancePlural %> = res.body;
                // added for Clarity
                this.loading = false;
            },
            (res: HttpErrorResponse) => this.onError(res.message)
        );
    }
