    <%= entityInstancePlural %>: I<%= entityAngularName %>[];
    currentAccount: any;
    eventSubscriber: Subscription;
    <%_ if (searchEngine === 'elasticsearch') { _%>
    currentSearch: string;
    <%_ } _%>

    constructor(
        private <%= entityInstance %>Service: <%= entityAngularName %>Service,
        private jhiAlertService: JhiAlertService,
        <%_ if (fieldsContainBlob) { _%>
        private dataUtils: JhiDataUtils,
        <%_ } _%>
        private eventManager: JhiEventManager,
        <%_ if (searchEngine === 'elasticsearch') { _%>
        private activatedRoute: ActivatedRoute,
        <%_ } _%>
        private principal: Principal
    ) {
        <%_ if (searchEngine === 'elasticsearch') { _%>
        this.currentSearch = this.activatedRoute.snapshot && this.activatedRoute.snapshot.params['search'] ?
            this.activatedRoute.snapshot.params['search'] : '';
        <%_ } _%>
    }

    loadAll() {
        <%_ if (searchEngine === 'elasticsearch') { _%>
        if (this.currentSearch) {
            this.<%= entityInstance %>Service.search({
                query: this.currentSearch,
                }).subscribe(
                    (res: HttpResponse<I<%= entityAngularName %>[]>) => this.<%= entityInstancePlural %> = res.body,
                    (res: HttpErrorResponse) => this.onError(res.message)
                );
            return;
       }
       <%_ } _%>
        this.<%= entityInstance %>Service.query().subscribe(
            (res: HttpResponse<I<%= entityAngularName %>[]>) => {
                this.<%= entityInstancePlural %> = res.body;
                <%_ if (searchEngine === 'elasticsearch') { _%>
                this.currentSearch = '';
                <%_ } _%>
            },
            (res: HttpErrorResponse) => this.onError(res.message)
        );
    }
    <%_ if (searchEngine === 'elasticsearch') { _%>
    search(query) {
        if (!query) {
            return this.clear();
        }
        this.currentSearch = query;
        this.loadAll();
    }
    clear() {
        this.currentSearch = '';
        this.loadAll();
    }
    <%_ } _%>
